[tool.poetry]
name = "python-workspace"
version = "2.0.1"
description = "Ready-to-use Python workspace with a devcontainer, VS Code settings, linting, formatting, type checks, pre-commit hooks, and automated updates."
readme = ["README.md", "LICENSE"]
license = "MIT"
authors = [
  "Evgenii Shiliaev <evgenii.shiliaev@jekwwer.com>"
]
keywords = [
  "python",
  "devcontainer",
  "vscode",
  "codespaces",
  "ci",
  "pre-commit-hooks",
  "linting",
  "formatting",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Integrated Development Environment (IDE)",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent"
]

[tool.poetry.urls]
Homepage = "https://github.com/Jekwwer/python-workspace"
"Bug Reports" = "https://github.com/Jekwwer/python-workspace/issues"
Source = "https://github.com/Jekwwer/python-workspace"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.0"
pytest-cov = "^6.1.1"
pytest-xdist = "^3.7.0"
coverage = {extras = ["toml"], version = "^7.8.2"}

[tool.poetry.group.lint.dependencies]
rstfmt = "^0.0.14"
ruff = "^0.11.12"

[tool.poetry.group.mypy.dependencies]
mypy = "^1.16.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^8.2.3"
sphinx-autoapi = "^3.6.0"
sphinx-rtd-theme = "^3.0.2"
sphinx-autobuild = "^2024.10.3"

[tool.poetry.scripts]
cli = "python_workspace.cli:main"

[tool.coverage.report]
fail_under = 90
show_missing = true
exclude_lines = [
  "# pragma: no cover",
  "^if __name__ == .__main__.:",
  "^\\s*#.*$"
]

[tool.coverage.run]
branch = true
source = ["python_workspace"]
omit = [
  "tests/*",
  "src/python_workspace/migrations/*"
]

[tool.mypy]
platform = "linux"
python_version = "3.12"
strict = true
disallow_untyped_defs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = [
  "--import-mode=importlib",
  "--cov=python_workspace",
  "--cov-config=pyproject.toml",
  "--cov-fail-under=90",
  "--cov-report=term-missing",
  "--cov-report=html:htmlcov",
  "--cov-report=xml:coverage.xml"
]

[tool.ruff]
line-length = 88
extend-exclude = ["tests", "migrations", "__pycache__"]
src = ["src"]

[tool.ruff.lint]
select = ["E","F","W","C","ANN","B","D","I","Q"]

[tool.ruff.lint.isort]
known-first-party = ["python_workspace"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
